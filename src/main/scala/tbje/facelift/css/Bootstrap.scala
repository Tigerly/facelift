package tbje.facelift.css

import tbje.facelift.attr.Class

/* (Some) Bootstrap 3 classes - requires an import like: 
 *   Script(Type.TextJavaScript, Src(s"//netdna.bootstrapcdn.com/bootstrap/$bootstrapVerison/js/bootstrap.min.js"), Id("bootstrap"))
 * usage example:
 * import tbje.facelift.css.{ BootstrapClasses => Bs }
 * Button(Bs.btn & Bs.btnInfo)("Click me")
 * */

object BootstrapClasses {
  val navbar = Class("navbar")
  val caret = Class("caret")
  val label = Class("label")
  val table = Class("table")
  val imgResponsive = Class("img-responsive")
  val imgRounded = Class("img-rounded")
  val imgThumbnail = Class("img-thumbnail")
  val imgCircle = Class("img-circle")
  val srOnly = Class("sr-only")
  val lead = Class("lead")
  val textMuted = Class("text-muted")
  val textPrimary = Class("text-primary")
  val textWarning = Class("text-warning")
  val textDanger = Class("text-danger")
  val textSuccess = Class("text-success")
  val textInfo = Class("text-info")
  val textLeft = Class("text-left")
  val textRight = Class("text-right")
  val textCenter = Class("text-center")
  val h6 = Class("h6")
  val h1 = Class("h1")
  val h2 = Class("h2")
  val h3 = Class("h3")
  val h4 = Class("h4")
  val h5 = Class("h5")
  val pageHeader = Class("page-header")
  val listUnstyled = Class("list-unstyled")
  val listInline = Class("list-inline")
  val initialism = Class("initialism")
  val pullRight = Class("pull-right")
  val prettyprint = Class("prettyprint")
  val preScrollable = Class("pre-scrollable")
  val container = Class("container")
  val row = Class("row")
  val colLg12 = Class("col-lg-12")
  val colXs11 = Class("col-xs-11")
  val colXs1 = Class("col-xs-1")
  val colXs2 = Class("col-xs-2")
  val colXs3 = Class("col-xs-3")
  val colXs4 = Class("col-xs-4")
  val colXs5 = Class("col-xs-5")
  val colXs6 = Class("col-xs-6")
  val colXs7 = Class("col-xs-7")
  val colXs8 = Class("col-xs-8")
  val colXs9 = Class("col-xs-9")
  val colXs10 = Class("col-xs-10")
  val colXs12 = Class("col-xs-12")
  val colSm11 = Class("col-sm-11")
  val colSm1 = Class("col-sm-1")
  val colSm2 = Class("col-sm-2")
  val colSm3 = Class("col-sm-3")
  val colSm4 = Class("col-sm-4")
  val colSm5 = Class("col-sm-5")
  val colSm6 = Class("col-sm-6")
  val colSm7 = Class("col-sm-7")
  val colSm8 = Class("col-sm-8")
  val colSm9 = Class("col-sm-9")
  val colSm10 = Class("col-sm-10")
  val colSm12 = Class("col-sm-12")
  val colSmPush1 = Class("col-sm-push-1")
  val colSmPush2 = Class("col-sm-push-2")
  val colSmPush3 = Class("col-sm-push-3")
  val colSmPush4 = Class("col-sm-push-4")
  val colSmPush5 = Class("col-sm-push-5")
  val colSmPush6 = Class("col-sm-push-6")
  val colSmPush7 = Class("col-sm-push-7")
  val colSmPush8 = Class("col-sm-push-8")
  val colSmPush9 = Class("col-sm-push-9")
  val colSmPush10 = Class("col-sm-push-10")
  val colSmPush11 = Class("col-sm-push-11")
  val colSmPull1 = Class("col-sm-pull-1")
  val colSmPull2 = Class("col-sm-pull-2")
  val colSmPull3 = Class("col-sm-pull-3")
  val colSmPull4 = Class("col-sm-pull-4")
  val colSmPull5 = Class("col-sm-pull-5")
  val colSmPull6 = Class("col-sm-pull-6")
  val colSmPull7 = Class("col-sm-pull-7")
  val colSmPull8 = Class("col-sm-pull-8")
  val colSmPull9 = Class("col-sm-pull-9")
  val colSmPull10 = Class("col-sm-pull-10")
  val colSmPull11 = Class("col-sm-pull-11")
  val colSmOffset1 = Class("col-sm-offset-1")
  val colSmOffset2 = Class("col-sm-offset-2")
  val colSmOffset3 = Class("col-sm-offset-3")
  val colSmOffset4 = Class("col-sm-offset-4")
  val colSmOffset5 = Class("col-sm-offset-5")
  val colSmOffset6 = Class("col-sm-offset-6")
  val colSmOffset7 = Class("col-sm-offset-7")
  val colSmOffset8 = Class("col-sm-offset-8")
  val colSmOffset9 = Class("col-sm-offset-9")
  val colSmOffset10 = Class("col-sm-offset-10")
  val colSmOffset11 = Class("col-sm-offset-11")
  val colMd11 = Class("col-md-11")
  val colMd1 = Class("col-md-1")
  val colMd2 = Class("col-md-2")
  val colMd3 = Class("col-md-3")
  val colMd4 = Class("col-md-4")
  val colMd5 = Class("col-md-5")
  val colMd6 = Class("col-md-6")
  val colMd7 = Class("col-md-7")
  val colMd8 = Class("col-md-8")
  val colMd9 = Class("col-md-9")
  val colMd10 = Class("col-md-10")
  val colMd12 = Class("col-md-12")
  val colMdPush0 = Class("col-md-push-0")
  val colMdPush1 = Class("col-md-push-1")
  val colMdPush2 = Class("col-md-push-2")
  val colMdPush3 = Class("col-md-push-3")
  val colMdPush4 = Class("col-md-push-4")
  val colMdPush5 = Class("col-md-push-5")
  val colMdPush6 = Class("col-md-push-6")
  val colMdPush7 = Class("col-md-push-7")
  val colMdPush8 = Class("col-md-push-8")
  val colMdPush9 = Class("col-md-push-9")
  val colMdPush10 = Class("col-md-push-10")
  val colMdPush11 = Class("col-md-push-11")
  val colMdPull0 = Class("col-md-pull-0")
  val colMdPull1 = Class("col-md-pull-1")
  val colMdPull2 = Class("col-md-pull-2")
  val colMdPull3 = Class("col-md-pull-3")
  val colMdPull4 = Class("col-md-pull-4")
  val colMdPull5 = Class("col-md-pull-5")
  val colMdPull6 = Class("col-md-pull-6")
  val colMdPull7 = Class("col-md-pull-7")
  val colMdPull8 = Class("col-md-pull-8")
  val colMdPull9 = Class("col-md-pull-9")
  val colMdPull10 = Class("col-md-pull-10")
  val colMdPull11 = Class("col-md-pull-11")
  val colMdOffset0 = Class("col-md-offset-0")
  val colMdOffset1 = Class("col-md-offset-1")
  val colMdOffset2 = Class("col-md-offset-2")
  val colMdOffset3 = Class("col-md-offset-3")
  val colMdOffset4 = Class("col-md-offset-4")
  val colMdOffset5 = Class("col-md-offset-5")
  val colMdOffset6 = Class("col-md-offset-6")
  val colMdOffset7 = Class("col-md-offset-7")
  val colMdOffset8 = Class("col-md-offset-8")
  val colMdOffset9 = Class("col-md-offset-9")
  val colMdOffset10 = Class("col-md-offset-10")
  val colMdOffset11 = Class("col-md-offset-11")
  val colLg11 = Class("col-lg-11")
  val colLg1 = Class("col-lg-1")
  val colLg2 = Class("col-lg-2")
  val colLg3 = Class("col-lg-3")
  val colLg4 = Class("col-lg-4")
  val colLg5 = Class("col-lg-5")
  val colLg6 = Class("col-lg-6")
  val colLg7 = Class("col-lg-7")
  val colLg8 = Class("col-lg-8")
  val colLg9 = Class("col-lg-9")
  val colLg10 = Class("col-lg-10")
  val colLgPush0 = Class("col-lg-push-0")
  val colLgPush1 = Class("col-lg-push-1")
  val colLgPush2 = Class("col-lg-push-2")
  val colLgPush3 = Class("col-lg-push-3")
  val colLgPush4 = Class("col-lg-push-4")
  val colLgPush5 = Class("col-lg-push-5")
  val colLgPush6 = Class("col-lg-push-6")
  val colLgPush7 = Class("col-lg-push-7")
  val colLgPush8 = Class("col-lg-push-8")
  val colLgPush9 = Class("col-lg-push-9")
  val colLgPush10 = Class("col-lg-push-10")
  val colLgPush11 = Class("col-lg-push-11")
  val colLgPull0 = Class("col-lg-pull-0")
  val colLgPull1 = Class("col-lg-pull-1")
  val colLgPull2 = Class("col-lg-pull-2")
  val colLgPull3 = Class("col-lg-pull-3")
  val colLgPull4 = Class("col-lg-pull-4")
  val colLgPull5 = Class("col-lg-pull-5")
  val colLgPull6 = Class("col-lg-pull-6")
  val colLgPull7 = Class("col-lg-pull-7")
  val colLgPull8 = Class("col-lg-pull-8")
  val colLgPull9 = Class("col-lg-pull-9")
  val colLgPull10 = Class("col-lg-pull-10")
  val colLgPull11 = Class("col-lg-pull-11")
  val colLgOffset0 = Class("col-lg-offset-0")
  val colLgOffset1 = Class("col-lg-offset-1")
  val colLgOffset2 = Class("col-lg-offset-2")
  val colLgOffset3 = Class("col-lg-offset-3")
  val colLgOffset4 = Class("col-lg-offset-4")
  val colLgOffset5 = Class("col-lg-offset-5")
  val colLgOffset6 = Class("col-lg-offset-6")
  val colLgOffset7 = Class("col-lg-offset-7")
  val colLgOffset8 = Class("col-lg-offset-8")
  val colLgOffset9 = Class("col-lg-offset-9")
  val colLgOffset10 = Class("col-lg-offset-10")
  val colLgOffset11 = Class("col-lg-offset-11")
  val tableBordered = Class("table-bordered")
  val tableResponsive = Class("table-responsive")
  val formControl = Class("form-control")
  val formGroup = Class("form-group")
  val checkbox = Class("checkbox")
  val checkboxInline = Class("checkbox-inline")
  val inputSm = Class("input-sm")
  val inputLg = Class("input-lg")
  val controlLabel = Class("control-label")
  val inputGroupAddon = Class("input-group-addon")
  val formControlStatic = Class("form-control-static")
  val helpBlock = Class("help-block")
  val btn = Class("btn")
  val active = Class("active")
  val btnDefault = Class("btn-default")
  val btnPrimary = Class("btn-primary")
  val btnWarning = Class("btn-warning")
  val btnDanger = Class("btn-danger")
  val btnSuccess = Class("btn-success")
  val btnInfo = Class("btn-info")
  val btnLink = Class("btn-link")
  val btnLg = Class("btn-lg")
  val btnXs = Class("btn-xs")
  val btnBlock = Class("btn-block")
  val fade = Class("fade")
  val in = Class("in")
  val collapse = Class("collapse")
  val collapsing = Class("collapsing")
  val glyphicon = Class("glyphicon")
  val dropdown = Class("dropdown")
  val dropdownMenu = Class("dropdown-menu")
  val divider = Class("divider")
  val dropdownHeader = Class("dropdown-header")
  val dropdownBackdrop = Class("dropdown-backdrop")
  val btnGroupVertical = Class("btn-group-vertical")
  val btnGroup = Class("btn-group")
  val dropdownToggle = Class("dropdown-toggle")
  val btnGroupJustified = Class("btn-group-justified")
  val inputGroup = Class("input-group")
  val col = Class("col")
  val inputGroupBtn = Class("input-group-btn")
  val nav = Class("nav")
  val navDivider = Class("nav-divider")
  val navTabs = Class("nav-tabs")
  val navJustified = Class("nav-justified")
  val navTabsJustified = Class("nav-tabs-justified")
  val pillPane = Class("pill-pane")
  val navbarHeader = Class("navbar-header")
  val navbarCollapse = Class("navbar-collapse")
  val navbarStaticTop = Class("navbar-static-top")
  val navbarFixedBottom = Class("navbar-fixed-bottom")
  val navbarFixedTop = Class("navbar-fixed-top")
  val navbarBrand = Class("navbar-brand")
  val navbarToggle = Class("navbar-toggle")
  val iconBar = Class("icon-bar")
  val navbarNav = Class("navbar-nav")
  val navbarLeft = Class("navbar-left")
  val navbarRight = Class("navbar-right")
  val navbarForm = Class("navbar-form")
  val navbarBtn = Class("navbar-btn")
  val navbarText = Class("navbar-text")
  val navbarDefault = Class("navbar-default")
  val navbarLink = Class("navbar-link")
  val navbarInverse = Class("navbar-inverse")
  val breadcrumb = Class("breadcrumb")
  val pagination = Class("pagination")
  val pager = Class("pager")
  val labelDefault = Class("label-default")
  val labelPrimary = Class("label-primary")
  val labelSuccess = Class("label-success")
  val labelInfo = Class("label-info")
  val labelWarning = Class("label-warning")
  val labelDanger = Class("label-danger")
  val badge = Class("badge")
  val jumbotron = Class("jumbotron")
  val thumbnail = Class("thumbnail")
  val caption = Class("caption")
  val alert = Class("alert")
  val alertLink = Class("alert-link")
  val alertDismissable = Class("alert-dismissable")
  val close = Class("close")
  val alertSuccess = Class("alert-success")
  val alertInfo = Class("alert-info")
  val alertWarning = Class("alert-warning")
  val alertDanger = Class("alert-danger")
  val progress = Class("progress")
  val progressBar = Class("progress-bar")
  val progressBarSuccess = Class("progress-bar-success")
  val progressBarInfo = Class("progress-bar-info")
  val progressBarWarning = Class("progress-bar-warning")
  val progressBarDanger = Class("progress-bar-danger")
  val mediaBody = Class("media-body")
  val media = Class("media")
  val mediaObject = Class("media-object")
  val mediaHeading = Class("media-heading")
  val pullLeft = Class("pull-left")
  val mediaList = Class("media-list")
  val listGroup = Class("list-group")
  val listGroupItem = Class("list-group-item")
  val listGroupItemHeading = Class("list-group-item-heading")
  val listGroupItemText = Class("list-group-item-text")
  val panel = Class("panel")
  val panelBody = Class("panel-body")
  val panelHeading = Class("panel-heading")
  val panelTitle = Class("panel-title")
  val panelFooter = Class("panel-footer")
  val panelDefault = Class("panel-default")
  val panelPrimary = Class("panel-primary")
  val panelSuccess = Class("panel-success")
  val panelWarning = Class("panel-warning")
  val panelDanger = Class("panel-danger")
  val panelInfo = Class("panel-info")
  val well = Class("well")
  val wellLg = Class("well-lg")
  val wellSm = Class("well-sm")
  val modalOpen = Class("modal-open")
  val modal = Class("modal")
  val modalDialog = Class("modal-dialog")
  val modalContent = Class("modal-content")
  val modalBackdrop = Class("modal-backdrop")
  val modalHeader = Class("modal-header")
  val modalTitle = Class("modal-title")
  val modalBody = Class("modal-body")
  val modalFooter = Class("modal-footer")
  val tooltip = Class("tooltip")
  val top = Class("top")
  val right = Class("right")
  val bottom = Class("bottom")
  val left = Class("left")
  val tooltipInner = Class("tooltip-inner")
  val tooltipArrow = Class("tooltip-arrow")
  val popover = Class("popover")
  val popoverTitle = Class("popover-title")
  val popoverContent = Class("popover-content")
  val arrow = Class("arrow")
  val carousel = Class("carousel")
  val carouselInner = Class("carousel-inner")
  val item = Class("item")
  val prev = Class("prev")
  val next = Class("next")
  val carouselControl = Class("carousel-control")
  val glyphiconChevronRight = Class("glyphicon-chevron-right")
  val iconNext = Class("icon-next")
  val carouselIndicators = Class("carousel-indicators")
  val carouselCaption = Class("carousel-caption")
  val hide = Class("hide")
  val show = Class("show")
  val invisible = Class("invisible")
  val textHide = Class("text-hide")
  val affix = Class("affix")
  val hidden = Class("hidden")
  val visibleXs = Class("visible-xs")
  val visibleSm = Class("visible-sm")
  val visibleMd = Class("visible-md")
  val visibleLg = Class("visible-lg")
  val hiddenXs = Class("hidden-xs")
  val hiddenSm = Class("hidden-sm")
  val hiddenMd = Class("hidden-md")
  val hiddenLg = Class("hidden-lg")
  val visiblePrint = Class("visible-print")
  val hiddenPrint = Class("hidden-print")

}

