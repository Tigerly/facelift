package com.github.tbje.facelift.html

import scala.xml.Unparsed

object Entities {
  val Quot = entity("quot") // quotation mark
  val Apos = entity("apos") // apostrophe
  val Amp = entity("amp") // ampersand
  val Lt = entity("lt") // less-than
  val Gt = entity("gt") // greater-than
  val Nbsp = entity("nbsp") // non-breaking space
  val Iexcl = entity("iexcl") // inverted exclamation mark
  val Cent = entity("cent") // cent
  val Pound = entity("pound") // pound
  val Curren = entity("curren") // currency
  val Yen = entity("yen") // yen
  val Brvbar = entity("brvbar") // broken vertical bar
  val Sect = entity("sect") // section
  val Uml = entity("uml") // spacing diaeresis
  val Copy = entity("copy") // copyright
  val Ordf = entity("ordf") // feminine ordinal indicator
  val Laquo = entity("laquo") // angle quotation mark (left)
  val Not = entity("not") // negation
  val Shy = entity("shy") // soft hyphen
  val Reg = entity("reg") // registered trademark
  val Macr = entity("macr") // spacing macron
  val Deg = entity("deg") // degree
  val Plusmn = entity("plusmn") // plus-or-minus
  val Sup2 = entity("sup2") // superscript 2
  val Sup3 = entity("sup3") // superscript 3
  val Acute = entity("acute") // spacing acute
  val Micro = entity("micro") // micro
  val Para = entity("para") // paragraph
  val Middot = entity("middot") // middle dot
  val Cedil = entity("cedil") // spacing cedilla
  val Sup1 = entity("sup1") // superscript 1
  val Ordm = entity("ordm") // masculine ordinal indicator
  val Raquo = entity("raquo") // angle quotation mark (right)
  val Frac14 = entity("frac14") // fraction 1/4
  val Frac12 = entity("frac12") // fraction 1/2
  val Frac34 = entity("frac34") // fraction 3/4
  val Iquest = entity("iquest") // inverted question mark
  val Times = entity("times") // multiplication
  val Divide = entity("divide") // division

  val AgraveCapital = entity("Agrave") // capital a, grave accent
  val AacuteCapital = entity("Aacute") // capital a, acute accent
  val AcircCapital = entity("Acirc") // capital a, circumflex accent
  val AtildeCapital = entity("Atilde") // capital a, tilde
  val AumlCapital = entity("Auml") // capital a, umlaut mark
  val AringCapital = entity("Aring") // capital a, ring
  val AEligCapital = entity("AElig") // capital ae
  val CcedilCapital = entity("Ccedil") // capital c, cedilla
  val EgraveCapital = entity("Egrave") // capital e, grave accent
  val EacuteCapital = entity("Eacute") // capital e, acute accent
  val EcircCapital = entity("Ecirc") // capital e, circumflex accent
  val EumlCapital = entity("Euml") // capital e, umlaut mark
  val IgraveCapital = entity("Igrave") // capital i, grave accent
  val IacuteCapital = entity("Iacute") // capital i, acute accent
  val IcircCapital = entity("Icirc") // capital i, circumflex accent
  val IumlCapital = entity("Iuml") // capital i, umlaut mark
  val ETHCapital = entity("ETH") // capital eth, Icelandic
  val NtildeCapital = entity("Ntilde") // capital n, tilde
  val OgraveCapital = entity("Ograve") // capital o, grave accent
  val OacuteCapital = entity("Oacute") // capital o, acute accent
  val OcircCapital = entity("Ocirc") // capital o, circumflex accent
  val OtildeCapital = entity("Otilde") // capital o, tilde
  val OumlCapital = entity("Ouml") // capital o, umlaut mark
  val OslashCapital = entity("Oslash") // capital o, slash
  val UgraveCapital = entity("Ugrave") // capital u, grave accent
  val UacuteCapital = entity("Uacute") // capital u, acute accent
  val UcircCapital = entity("Ucirc") // capital u, circumflex accent
  val UumlCapital = entity("Uuml") // capital u, umlaut mark
  val YacuteCapital = entity("Yacute") // capital y, acute accent
  val THORNCapital = entity("THORN") // capital THORN, Icelandic

  val Szlig = entity("szlig") // small sharp s, German
  val Agrave = entity("agrave") // small a, grave accent
  val Aacute = entity("aacute") // small a, acute accent
  val Acirc = entity("acirc") // small a, circumflex accent
  val Atilde = entity("atilde") // small a, tilde
  val Auml = entity("auml") // small a, umlaut mark
  val Aring = entity("aring") // small a, ring
  val Aelig = entity("aelig") // small ae
  val Ccedil = entity("ccedil") // small c, cedilla
  val Egrave = entity("egrave") // small e, grave accent
  val Eacute = entity("eacute") // small e, acute accent
  val Ecirc = entity("ecirc") // small e, circumflex accent
  val Euml = entity("euml") // small e, umlaut mark
  val Igrave = entity("igrave") // small i, grave accent
  val Iacute = entity("iacute") // small i, acute accent
  val Icirc = entity("icirc") // small i, circumflex accent
  val Iuml = entity("iuml") // small i, umlaut mark
  val Eth = entity("eth") // small eth, Icelandic
  val Ntilde = entity("ntilde") // small n, tilde
  val Ograve = entity("ograve") // small o, grave accent
  val Oacute = entity("oacute") // small o, acute accent
  val Ocirc = entity("ocirc") // small o, circumflex accent
  val Otilde = entity("otilde") // small o, tilde
  val Ouml = entity("ouml") // small o, umlaut mark
  val Oslash = entity("oslash") // small o, slash
  val Ugrave = entity("ugrave") // small u, grave accent
  val Uacute = entity("uacute") // small u, acute accent
  val Ucirc = entity("ucirc") // small u, circumflex accent
  val Uuml = entity("uuml") // small u, umlaut mark
  val Yacute = entity("yacute") // small y, acute accent
  val Thorn = entity("thorn") // small thorn, Icelandic
  val Yuml = entity("yuml") // small y, umlaut mark
  def entity(x: String) = Unparsed(s"&$x;")
}
